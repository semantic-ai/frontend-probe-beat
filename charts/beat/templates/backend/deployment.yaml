apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beat.fullname" . }}-backend
  labels:
    {{- include "beat.labels" . | nindent 4 }}
    {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "beat.selectorLabels" . | nindent 6 }}
      app: backend
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "beat.selectorLabels" . | nindent 8 }}
        app: backend
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName:
        {{- include "beat.serviceAccountName" . | nindent 8 }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.image.backend }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "FASTAPI_ORIGIN"
              value: {{ .Values.publicUrl | quote }}
            - name: "SPARQL_DECISION_ENDPOINT"
              value: {{ .Values.sparql.endpoint.decision }}
            - name: "SPARQL_TAXONOMY_ENDPOINT"
              value: {{ .Values.sparql.endpoint.taxonomy }}
          {{- if not .Values.sparql.auth.secretName }}
            - name: "SPARQL_AUTH_TYPE"
              value: {{ .Values.sparql.auth.type | quote }}
            - name: "SPARQL_AUTH_USERNAME"
              value: {{ .Values.sparql.auth.username | quote }}
            - name: "SPARQL_AUTH_PASSWORD"
              value: {{ .Values.sparql.auth.password | quote }}
          {{- end }}
          {{- if not .Values.msal.secretName }}
            - name: "MSAL_CLIENT_ID"
              value: {{ .Values.msal.clientId | quote }}
            - name: "MSAL_ISSUER"
              value: {{ .Values.msal.issuer | quote }}
          {{- end }}
          {{- with .Values.backend.env }}
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.backend.envConfigMaps .Values.backend.envSecrets .Values.sparql.auth.secretName .Values.msal.secretName }}
          envFrom:
            {{- range $envConfigMap := .Values.backend.envConfigMaps }}
            - configMapRef:
                {{- toYaml $envConfigMap | nindent 16 }}
            {{- end }}
            {{- range $envSecret := .Values.backend.envSecrets }}
            - secretRef:
                {{- toYaml $envSecret | nindent 16 }}
            {{- end }}
            {{- with .Values.sparql.auth.secretName }}
            - secretRef:
              name: {{ . | quote }}
            {{- end }}
            {{- with .Values.msal.secretName }}
            - secretRef:
              name: {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
          {{- with .Values.backend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
