apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beat.fullname" . }}-frontend
  labels:
    {{- include "beat.labels" . | nindent 4 }}
    {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      {{- include "beat.selectorLabels" . | nindent 6 }}
      app: frontend
  template:
    metadata:
      {{- with .Values.frontend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "beat.selectorLabels" . | nindent 8 }}
        app: frontend
        {{- with .Values.frontend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName:
        {{- include "beat.serviceAccountName" . | nindent 8 }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.image.frontend }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.frontend.env }}
          env:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.frontend.envConfigMaps .Values.frontend.envSecrets }}
          envFrom:
            {{- range $envConfigMap := .Values.frontend.envConfigMaps }}
            - configMapRef:
                {{- toYaml $envConfigMap | nindent 16 }}
            {{- end }}
            {{- range $envSecret := .Values.frontend.envSecrets }}
            - secretRef:
                {{- toYaml $envSecret | nindent 16 }}
            {{- end }}
            {{- with .Values.msal.secretName }}
            - secretRef:
              name: {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- with .Values.frontend.volumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.frontend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.frontend.volumes }}
      volumes:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
